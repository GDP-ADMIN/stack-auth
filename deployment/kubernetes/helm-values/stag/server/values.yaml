replicaCount: 1

image:
  namespace: gen-ai-template-stag
  pullPolicy: IfNotPresent
  pullSecret: gcr-secret
  repositoryUrl: asia-southeast2-docker.pkg.dev/${PROJECT_ID}/projects/stack-auth/server
  tag: "${BUILD_NUMBER}"
  ports:
    - name: dashboard
      port: 8101
      targetPort: 8101
      nodePort: null
      Values:
        service:
          type: ClusterIP
    - name: api
      port: 8102
      targetPort: 8102
      nodePort: null
      Values:
        service:
          type: ClusterIP

strategy:
  type: RollingUpdate
  rollingUpdate:
    # The default function is used to provide a fallback value if the specified value is not defined or is empty. In Helm, 0 (zero) is treated as an empty value (falsy)
    maxSurge: "1"
    maxUnavailable: "0"

configmap:
  create: true
  configmapRef:
    name: stackauth-server-configmap
secret:
  create: true
  secretRef:
    name: stackauth-server-secret

resources:
  limits:
    memory: 2Gi
  requests:
    cpu: 512m
    memory: 768Mi

pvc:
  create: false


ingress:
  name: stackauth-server
  className: "alb"
  groupname: lb-gdplabs-exploration-shared
  healthcheckpath: "/"
  serviceannotations:
    alb.ingress.kubernetes.io/tags: "Environment=stag,Project=gen-ai,Organization=gdplabs,Owner=glx-sre@gdplabs.id,CreatedOn=05/08/2025"
  extraAnnotations:
    # Whitelist internal platform / services for VPN access only.
    # In front of application load balancer, there are security group who allow non-VPN IPs through the load balancer.

    # Forward traffic to the service if the source IP is whitelisted.
    alb.ingress.kubernetes.io/conditions.forward-service-if-whitelisted: >
      [{"Field":"source-ip","SourceIpConfig":{"Values":["34.101.184.41/32"]}}]
    alb.ingress.kubernetes.io/actions.forward-service-if-whitelisted: >
      {"Type":"forward","ForwardConfig":{"TargetGroups":[{"ServiceName":"stackauth-server-service","ServicePort":"8101"}]}}

    # No condition, forward all traffic to the service.
    alb.ingress.kubernetes.io/actions.forward-service-if-not-whitelisted: >
      {"Type":"forward","ForwardConfig":{"TargetGroups":[{"ServiceName":"stackauth-server-service","ServicePort":"8102"}]}}
  rules:
    - host: stag-stackauth-gdplabs-gen-ai-starter.obrol.id
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation
          - path: /
            pathType: Prefix
            backend:
              service:
                name: forward-service-if-whitelisted
                port:
                  name: use-annotation
    - host: stag-api-stackauth-gdplabs-gen-ai-starter.obrol.id
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation
          - path: /
            pathType: Prefix
            backend:
              service:
                name: forward-service-if-not-whitelisted
                port:
                  name: use-annotation
